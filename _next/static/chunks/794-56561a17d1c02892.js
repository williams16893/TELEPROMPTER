(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[794],{6239:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(_param){let blurWidth,blurHeight;var src,{src:src1,sizes,unoptimized=!1,priority=!1,loading,className,quality,width,height,fill,style,onLoad,onLoadingComplete,placeholder="empty",blurDataURL,layout,objectFit,objectPosition,lazyBoundary,lazyRoot}=_param,all=_object_without_properties_loose(_param,["src","sizes","unoptimized","priority","loading","className","quality","width","height","fill","style","onLoad","onLoadingComplete","placeholder","blurDataURL","layout","objectFit","objectPosition","lazyBoundary","lazyRoot"]);let configContext=_react.useContext(_imageConfigContext.ImageConfigContext),config=_react.useMemo(()=>{let c=configEnv||configContext||_imageConfig.imageConfigDefault,allSizes=[...c.deviceSizes,...c.imageSizes].sort((a,b)=>a-b),deviceSizes=c.deviceSizes.sort((a,b)=>a-b);return _extends({},c,{allSizes,deviceSizes})},[configContext]),rest=all,loader=rest.loader||_imageLoader.default;if(delete rest.loader,"__next_img_default"in loader){if("custom"===config.loader)throw Error('Image with src "'.concat(src1,'" is missing "loader" prop.')+"\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader")}else{let customImageLoader=loader;loader=obj=>{let{config:_}=obj,opts=_object_without_properties_loose(obj,["config"]);return customImageLoader(opts)}}if(layout){"fill"===layout&&(fill=!0);let layoutStyle={intrinsic:{maxWidth:"100%",height:"auto"},responsive:{width:"100%",height:"auto"}}[layout];layoutStyle&&(style=_extends({},style,layoutStyle));let layoutSizes={responsive:"100vw",fill:"100vw"}[layout];layoutSizes&&!sizes&&(sizes=layoutSizes)}let staticSrc="",widthInt=getInt(width),heightInt=getInt(height);if("object"==typeof(src=src1)&&(isStaticRequire(src)||void 0!==src.src)){let staticImageData=isStaticRequire(src1)?src1.default:src1;if(!staticImageData.src)throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ".concat(JSON.stringify(staticImageData)));if(!staticImageData.height||!staticImageData.width)throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ".concat(JSON.stringify(staticImageData)));if(blurWidth=staticImageData.blurWidth,blurHeight=staticImageData.blurHeight,blurDataURL=blurDataURL||staticImageData.blurDataURL,staticSrc=staticImageData.src,!fill){if(widthInt||heightInt){if(widthInt&&!heightInt){let ratio=widthInt/staticImageData.width;heightInt=Math.round(staticImageData.height*ratio)}else if(!widthInt&&heightInt){let ratio1=heightInt/staticImageData.height;widthInt=Math.round(staticImageData.width*ratio1)}}else widthInt=staticImageData.width,heightInt=staticImageData.height}}let isLazy=!priority&&("lazy"===loading||void 0===loading);((src1="string"==typeof src1?src1:staticSrc).startsWith("data:")||src1.startsWith("blob:"))&&(unoptimized=!0,isLazy=!1),config.unoptimized&&(unoptimized=!0);let[blurComplete,setBlurComplete]=_react.useState(!1),[showAltText,setShowAltText]=_react.useState(!1),qualityInt=getInt(quality),imgStyle=Object.assign(fill?{position:"absolute",height:"100%",width:"100%",left:0,top:0,right:0,bottom:0,objectFit,objectPosition}:{},showAltText?{}:{color:"transparent"},style),blurStyle="blur"===placeholder&&blurDataURL&&!blurComplete?{backgroundSize:imgStyle.objectFit||"cover",backgroundPosition:imgStyle.objectPosition||"50% 50%",backgroundRepeat:"no-repeat",backgroundImage:'url("data:image/svg+xml;charset=utf-8,'.concat(_imageBlurSvg.getImageBlurSvg({widthInt,heightInt,blurWidth,blurHeight,blurDataURL}),'")')}:{},imgAttributes=function(param){let{config,src,unoptimized,width,quality,sizes,loader}=param;if(unoptimized)return{src,srcSet:void 0,sizes:void 0};let{widths,kind}=function(param,width,sizes){let{deviceSizes,allSizes}=param;if(sizes){let viewportWidthRe=/(^|\s)(1?\d?\d)vw/g,percentSizes=[];for(let match;match=viewportWidthRe.exec(sizes);match)percentSizes.push(parseInt(match[2]));if(percentSizes.length){let smallestRatio=.01*Math.min(...percentSizes);return{widths:allSizes.filter(s=>s>=deviceSizes[0]*smallestRatio),kind:"w"}}return{widths:allSizes,kind:"w"}}if("number"!=typeof width)return{widths:deviceSizes,kind:"w"};let widths=[...new Set([width,2*width].map(w=>allSizes.find(p=>p>=w)||allSizes[allSizes.length-1]))];return{widths,kind:"x"}}(config,width,sizes),last=widths.length-1;return{sizes:sizes||"w"!==kind?sizes:"100vw",srcSet:widths.map((w,i)=>"".concat(loader({config,src,quality,width:w})," ").concat("w"===kind?w:i+1).concat(kind)).join(", "),src:loader({config,src,quality,width:widths[last]})}}({config,src:src1,unoptimized,width:widthInt,quality:qualityInt,sizes,loader}),srcString=src1,linkProps={imageSrcSet:imgAttributes.srcSet,imageSizes:imgAttributes.sizes,crossOrigin:rest.crossOrigin},onLoadRef=_react.useRef(onLoad);_react.useEffect(()=>{onLoadRef.current=onLoad},[onLoad]);let onLoadingCompleteRef=_react.useRef(onLoadingComplete);_react.useEffect(()=>{onLoadingCompleteRef.current=onLoadingComplete},[onLoadingComplete]);let imgElementArgs=_extends({isLazy,imgAttributes,heightInt,widthInt,qualityInt,className,imgStyle,blurStyle,loading,config,fill,unoptimized,placeholder,loader,srcString,onLoadRef,onLoadingCompleteRef,setBlurComplete,setShowAltText},rest);return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement(ImageElement,Object.assign({},imgElementArgs)),priority?_react.default.createElement(_head.default,null,_react.default.createElement("link",Object.assign({key:"__nimg-"+imgAttributes.src+imgAttributes.srcSet+imgAttributes.sizes,rel:"preload",as:"image",href:imgAttributes.srcSet?void 0:imgAttributes.src},linkProps))):null)};var _extends=__webpack_require__(9419).Z,_interop_require_default=__webpack_require__(3903).Z,_interop_require_wildcard=__webpack_require__(199).Z,_object_without_properties_loose=__webpack_require__(5154).Z,_react=_interop_require_wildcard(__webpack_require__(2784)),_head=_interop_require_default(__webpack_require__(7016)),_imageBlurSvg=__webpack_require__(8575),_imageConfig=__webpack_require__(5515),_imageConfigContext=__webpack_require__(3581);__webpack_require__(7690);var _imageLoader=_interop_require_default(__webpack_require__(1354));let configEnv={deviceSizes:[360,640,768,1024,1280,1536],imageSizes:[16,32,48,64,96,128,256],path:"/_next/image",loader:"default",dangerouslyAllowSVG:!1,unoptimized:!1};function isStaticRequire(src){return void 0!==src.default}function getInt(x){return"number"==typeof x||void 0===x?x:"string"==typeof x&&/^[0-9]+$/.test(x)?parseInt(x,10):NaN}function handleLoading(img,src,placeholder,onLoadRef,onLoadingCompleteRef,setBlurComplete,unoptimized){if(!img||img["data-loaded-src"]===src)return;img["data-loaded-src"]=src;let p="decode"in img?img.decode():Promise.resolve();p.catch(()=>{}).then(()=>{if(img.parentNode){if("blur"===placeholder&&setBlurComplete(!0),null==onLoadRef?void 0:onLoadRef.current){let event=new Event("load");Object.defineProperty(event,"target",{writable:!1,value:img});let prevented=!1,stopped=!1;onLoadRef.current(_extends({},event,{nativeEvent:event,currentTarget:img,target:img,isDefaultPrevented:()=>prevented,isPropagationStopped:()=>stopped,persist(){},preventDefault(){prevented=!0,event.preventDefault()},stopPropagation(){stopped=!0,event.stopPropagation()}}))}(null==onLoadingCompleteRef?void 0:onLoadingCompleteRef.current)&&onLoadingCompleteRef.current(img)}})}let ImageElement=_param=>{var{imgAttributes,heightInt,widthInt,qualityInt,className,imgStyle,blurStyle,isLazy,fill,placeholder,loading,srcString,config,unoptimized,loader,onLoadRef,onLoadingCompleteRef,setBlurComplete,setShowAltText,onLoad,onError}=_param,rest=_object_without_properties_loose(_param,["imgAttributes","heightInt","widthInt","qualityInt","className","imgStyle","blurStyle","isLazy","fill","placeholder","loading","srcString","config","unoptimized","loader","onLoadRef","onLoadingCompleteRef","setBlurComplete","setShowAltText","onLoad","onError"]);return loading=isLazy?"lazy":loading,_react.default.createElement(_react.default.Fragment,null,_react.default.createElement("img",Object.assign({},rest,imgAttributes,{width:widthInt,height:heightInt,decoding:"async","data-nimg":fill?"fill":"1",className:className,loading:loading,style:_extends({},imgStyle,blurStyle),ref:_react.useCallback(img=>{img&&(onError&&(img.src=img.src),img.complete&&handleLoading(img,srcString,placeholder,onLoadRef,onLoadingCompleteRef,setBlurComplete,unoptimized))},[srcString,placeholder,onLoadRef,onLoadingCompleteRef,setBlurComplete,onError,unoptimized]),onLoad(event){let img=event.currentTarget;handleLoading(img,srcString,placeholder,onLoadRef,onLoadingCompleteRef,setBlurComplete,unoptimized)},onError(event){setShowAltText(!0),"blur"===placeholder&&setBlurComplete(!0),onError&&onError(event)}})))};("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default)},8575:function(__unused_webpack_module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getImageBlurSvg=function(param){let{widthInt,heightInt,blurWidth,blurHeight,blurDataURL}=param,svgWidth=blurWidth||widthInt,svgHeight=blurHeight||heightInt,feComponentTransfer=blurDataURL.startsWith("data:image/jpeg")?"%3CfeComponentTransfer%3E%3CfeFuncA type='discrete' tableValues='1 1'/%3E%3C/feComponentTransfer%3E%":"";return svgWidth&&svgHeight?"%3Csvg xmlns='http%3A//www.w3.org/2000/svg' viewBox='0 0 ".concat(svgWidth," ").concat(svgHeight,"'%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='").concat(blurWidth&&blurHeight?"1":"20","'/%3E").concat(feComponentTransfer,"%3C/filter%3E%3Cimage preserveAspectRatio='none' filter='url(%23b)' x='0' y='0' height='100%25' width='100%25' href='").concat(blurDataURL,"'/%3E%3C/svg%3E"):"%3Csvg xmlns='http%3A//www.w3.org/2000/svg'%3E%3Cimage style='filter:blur(20px)' x='0' y='0' height='100%25' width='100%25' href='".concat(blurDataURL,"'/%3E%3C/svg%3E")}},1354:function(__unused_webpack_module,exports){"use strict";function defaultLoader(param){let{config,src,width,quality}=param;return src.endsWith(".svg")&&!config.dangerouslyAllowSVG?src:"".concat(config.path,"?url=").concat(encodeURIComponent(src),"&w=").concat(width,"&q=").concat(quality||75)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0,defaultLoader.__next_img_default=!0,exports.default=defaultLoader},6577:function(module,__unused_webpack_exports,__webpack_require__){module.exports=__webpack_require__(6239)},195:function(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{z:function(){return z}}),(util=util1||(util1={})).assertEqual=val=>val,util.assertIs=function(_arg){},util.assertNever=function(_x){throw Error()},util.arrayToEnum=items=>{let obj={};for(let item of items)obj[item]=item;return obj},util.getValidEnumValues=obj=>{let validKeys=util.objectKeys(obj).filter(k=>"number"!=typeof obj[obj[k]]),filtered={};for(let k of validKeys)filtered[k]=obj[k];return util.objectValues(filtered)},util.objectValues=obj=>util.objectKeys(obj).map(function(e){return obj[e]}),util.objectKeys="function"==typeof Object.keys?obj=>Object.keys(obj):object=>{let keys=[];for(let key in object)Object.prototype.hasOwnProperty.call(object,key)&&keys.push(key);return keys},util.find=(arr,checker)=>{for(let item of arr)if(checker(item))return item},util.isInteger="function"==typeof Number.isInteger?val=>Number.isInteger(val):val=>"number"==typeof val&&isFinite(val)&&Math.floor(val)===val,util.joinValues=function(array,separator=" | "){return array.map(val=>"string"==typeof val?`'${val}'`:val).join(separator)},util.jsonStringifyReplacer=(_,value)=>"bigint"==typeof value?value.toString():value,(objectUtil||(objectUtil={})).mergeShapes=(first,second)=>({...first,...second});let ZodParsedType=util1.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),getParsedType=data=>{switch(typeof data){case"undefined":return ZodParsedType.undefined;case"string":return ZodParsedType.string;case"number":return isNaN(data)?ZodParsedType.nan:ZodParsedType.number;case"boolean":return ZodParsedType.boolean;case"function":return ZodParsedType.function;case"bigint":return ZodParsedType.bigint;case"symbol":return ZodParsedType.symbol;case"object":if(Array.isArray(data))return ZodParsedType.array;if(null===data)return ZodParsedType.null;if(data.then&&"function"==typeof data.then&&data.catch&&"function"==typeof data.catch)return ZodParsedType.promise;if("undefined"!=typeof Map&&data instanceof Map)return ZodParsedType.map;if("undefined"!=typeof Set&&data instanceof Set)return ZodParsedType.set;if("undefined"!=typeof Date&&data instanceof Date)return ZodParsedType.date;return ZodParsedType.object;default:return ZodParsedType.unknown}},ZodIssueCode=util1.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),quotelessJson=obj=>{let json=JSON.stringify(obj,null,2);return json.replace(/"([^"]+)":/g,"$1:")};class ZodError extends Error{constructor(issues){super(),this.issues=[],this.addIssue=sub=>{this.issues=[...this.issues,sub]},this.addIssues=(subs=[])=>{this.issues=[...this.issues,...subs]};let actualProto=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,actualProto):this.__proto__=actualProto,this.name="ZodError",this.issues=issues}get errors(){return this.issues}format(_mapper){let mapper=_mapper||function(issue){return issue.message},fieldErrors={_errors:[]},processError=error=>{for(let issue of error.issues)if("invalid_union"===issue.code)issue.unionErrors.map(processError);else if("invalid_return_type"===issue.code)processError(issue.returnTypeError);else if("invalid_arguments"===issue.code)processError(issue.argumentsError);else if(0===issue.path.length)fieldErrors._errors.push(mapper(issue));else{let curr=fieldErrors,i=0;for(;i<issue.path.length;){let el=issue.path[i],terminal=i===issue.path.length-1;terminal?(curr[el]=curr[el]||{_errors:[]},curr[el]._errors.push(mapper(issue))):curr[el]=curr[el]||{_errors:[]},curr=curr[el],i++}}};return processError(this),fieldErrors}toString(){return this.message}get message(){return JSON.stringify(this.issues,util1.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(mapper=issue=>issue.message){let fieldErrors={},formErrors=[];for(let sub of this.issues)sub.path.length>0?(fieldErrors[sub.path[0]]=fieldErrors[sub.path[0]]||[],fieldErrors[sub.path[0]].push(mapper(sub))):formErrors.push(mapper(sub));return{formErrors,fieldErrors}}get formErrors(){return this.flatten()}}ZodError.create=issues=>{let error=new ZodError(issues);return error};let errorMap=(issue,_ctx)=>{let message;switch(issue.code){case ZodIssueCode.invalid_type:message=issue.received===ZodParsedType.undefined?"Required":`Expected ${issue.expected}, received ${issue.received}`;break;case ZodIssueCode.invalid_literal:message=`Invalid literal value, expected ${JSON.stringify(issue.expected,util1.jsonStringifyReplacer)}`;break;case ZodIssueCode.unrecognized_keys:message=`Unrecognized key(s) in object: ${util1.joinValues(issue.keys,", ")}`;break;case ZodIssueCode.invalid_union:message="Invalid input";break;case ZodIssueCode.invalid_union_discriminator:message=`Invalid discriminator value. Expected ${util1.joinValues(issue.options)}`;break;case ZodIssueCode.invalid_enum_value:message=`Invalid enum value. Expected ${util1.joinValues(issue.options)}, received '${issue.received}'`;break;case ZodIssueCode.invalid_arguments:message="Invalid function arguments";break;case ZodIssueCode.invalid_return_type:message="Invalid function return type";break;case ZodIssueCode.invalid_date:message="Invalid date";break;case ZodIssueCode.invalid_string:"object"==typeof issue.validation?"includes"in issue.validation?(message=`Invalid input: must include "${issue.validation.includes}"`,"number"==typeof issue.validation.position&&(message=`${message} at one or more positions greater than or equal to ${issue.validation.position}`)):"startsWith"in issue.validation?message=`Invalid input: must start with "${issue.validation.startsWith}"`:"endsWith"in issue.validation?message=`Invalid input: must end with "${issue.validation.endsWith}"`:util1.assertNever(issue.validation):message="regex"!==issue.validation?`Invalid ${issue.validation}`:"Invalid";break;case ZodIssueCode.too_small:message="array"===issue.type?`Array must contain ${issue.exact?"exactly":issue.inclusive?"at least":"more than"} ${issue.minimum} element(s)`:"string"===issue.type?`String must contain ${issue.exact?"exactly":issue.inclusive?"at least":"over"} ${issue.minimum} character(s)`:"number"===issue.type?`Number must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${issue.minimum}`:"date"===issue.type?`Date must be ${issue.exact?"exactly equal to ":issue.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(issue.minimum))}`:"Invalid input";break;case ZodIssueCode.too_big:message="array"===issue.type?`Array must contain ${issue.exact?"exactly":issue.inclusive?"at most":"less than"} ${issue.maximum} element(s)`:"string"===issue.type?`String must contain ${issue.exact?"exactly":issue.inclusive?"at most":"under"} ${issue.maximum} character(s)`:"number"===issue.type?`Number must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:"bigint"===issue.type?`BigInt must be ${issue.exact?"exactly":issue.inclusive?"less than or equal to":"less than"} ${issue.maximum}`:"date"===issue.type?`Date must be ${issue.exact?"exactly":issue.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(issue.maximum))}`:"Invalid input";break;case ZodIssueCode.custom:message="Invalid input";break;case ZodIssueCode.invalid_intersection_types:message="Intersection results could not be merged";break;case ZodIssueCode.not_multiple_of:message=`Number must be a multiple of ${issue.multipleOf}`;break;case ZodIssueCode.not_finite:message="Number must be finite";break;default:message=_ctx.defaultError,util1.assertNever(issue)}return{message}},overrideErrorMap=errorMap,makeIssue=params=>{let{data,path,errorMaps,issueData}=params,fullPath=[...path,...issueData.path||[]],fullIssue={...issueData,path:fullPath},errorMessage="",maps=errorMaps.filter(m=>!!m).slice().reverse();for(let map of maps)errorMessage=map(fullIssue,{data,defaultError:errorMessage}).message;return{...issueData,path:fullPath,message:issueData.message||errorMessage}};function addIssueToContext(ctx,issueData){let issue=makeIssue({issueData:issueData,data:ctx.data,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,overrideErrorMap,errorMap].filter(x=>!!x)});ctx.common.issues.push(issue)}class ParseStatus{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(status,results){let arrayValue=[];for(let s of results){if("aborted"===s.status)return INVALID;"dirty"===s.status&&status.dirty(),arrayValue.push(s.value)}return{status:status.value,value:arrayValue}}static async mergeObjectAsync(status,pairs){let syncPairs=[];for(let pair of pairs)syncPairs.push({key:await pair.key,value:await pair.value});return ParseStatus.mergeObjectSync(status,syncPairs)}static mergeObjectSync(status,pairs){let finalObject={};for(let pair of pairs){let{key,value}=pair;if("aborted"===key.status||"aborted"===value.status)return INVALID;"dirty"===key.status&&status.dirty(),"dirty"===value.status&&status.dirty(),(void 0!==value.value||pair.alwaysSet)&&(finalObject[key.value]=value.value)}return{status:status.value,value:finalObject}}}let INVALID=Object.freeze({status:"aborted"}),DIRTY=value=>({status:"dirty",value}),OK=value=>({status:"valid",value}),isAborted=x=>"aborted"===x.status,isDirty=x=>"dirty"===x.status,isValid=x=>"valid"===x.status,isAsync=x=>"undefined"!=typeof Promise&&x instanceof Promise;(errorUtil=errorUtil1||(errorUtil1={})).errToObj=message=>"string"==typeof message?{message}:message||{},errorUtil.toString=message=>"string"==typeof message?message:null==message?void 0:message.message;class ParseInputLazyPath{constructor(parent,value,path,key){this._cachedPath=[],this.parent=parent,this.data=value,this._path=path,this._key=key}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}let handleResult=(ctx,result)=>{if(isValid(result))return{success:!0,data:result.value};if(!ctx.common.issues.length)throw Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;let error=new ZodError(ctx.common.issues);return this._error=error,this._error}}};function processCreateParams(params){if(!params)return{};let{errorMap,invalid_type_error,required_error,description}=params;if(errorMap&&(invalid_type_error||required_error))throw Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');if(errorMap)return{errorMap:errorMap,description};let customMap=(iss,ctx)=>"invalid_type"!==iss.code?{message:ctx.defaultError}:void 0===ctx.data?{message:null!=required_error?required_error:ctx.defaultError}:{message:null!=invalid_type_error?invalid_type_error:ctx.defaultError};return{errorMap:customMap,description}}class ZodType{constructor(def){this.spa=this.safeParseAsync,this._def=def,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(input){return getParsedType(input.data)}_getOrReturnCtx(input,ctx){return ctx||{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}_processInputParams(input){return{status:new ParseStatus,ctx:{common:input.parent.common,data:input.data,parsedType:getParsedType(input.data),schemaErrorMap:this._def.errorMap,path:input.path,parent:input.parent}}}_parseSync(input){let result=this._parse(input);if(isAsync(result))throw Error("Synchronous parse encountered promise.");return result}_parseAsync(input){let result=this._parse(input);return Promise.resolve(result)}parse(data,params){let result=this.safeParse(data,params);if(result.success)return result.data;throw result.error}safeParse(data,params){var _a;let ctx={common:{issues:[],async:null!==(_a=null==params?void 0:params.async)&&void 0!==_a&&_a,contextualErrorMap:null==params?void 0:params.errorMap},path:(null==params?void 0:params.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)},result=this._parseSync({data,path:ctx.path,parent:ctx});return handleResult(ctx,result)}async parseAsync(data,params){let result=await this.safeParseAsync(data,params);if(result.success)return result.data;throw result.error}async safeParseAsync(data,params){let ctx={common:{issues:[],contextualErrorMap:null==params?void 0:params.errorMap,async:!0},path:(null==params?void 0:params.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data,parsedType:getParsedType(data)},maybeAsyncResult=this._parse({data,path:ctx.path,parent:ctx}),result=await (isAsync(maybeAsyncResult)?maybeAsyncResult:Promise.resolve(maybeAsyncResult));return handleResult(ctx,result)}refine(check,message){let getIssueProperties=val=>"string"==typeof message||void 0===message?{message}:"function"==typeof message?message(val):message;return this._refinement((val,ctx)=>{let result=check(val),setError=()=>ctx.addIssue({code:ZodIssueCode.custom,...getIssueProperties(val)});return"undefined"!=typeof Promise&&result instanceof Promise?result.then(data=>!!data||(setError(),!1)):!!result||(setError(),!1)})}refinement(check,refinementData){return this._refinement((val,ctx)=>!!check(val)||(ctx.addIssue("function"==typeof refinementData?refinementData(val,ctx):refinementData),!1))}_refinement(refinement){return new ZodEffects({schema:this,typeName:ZodFirstPartyTypeKind1.ZodEffects,effect:{type:"refinement",refinement}})}superRefine(refinement){return this._refinement(refinement)}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this,this._def)}promise(){return ZodPromise.create(this,this._def)}or(option){return ZodUnion.create([this,option],this._def)}and(incoming){return ZodIntersection.create(this,incoming,this._def)}transform(transform){return new ZodEffects({...processCreateParams(this._def),schema:this,typeName:ZodFirstPartyTypeKind1.ZodEffects,effect:{type:"transform",transform}})}default(def){return new ZodDefault({...processCreateParams(this._def),innerType:this,defaultValue:"function"==typeof def?def:()=>def,typeName:ZodFirstPartyTypeKind1.ZodDefault})}brand(){return new ZodBranded({typeName:ZodFirstPartyTypeKind1.ZodBranded,type:this,...processCreateParams(this._def)})}catch(def){return new ZodCatch({...processCreateParams(this._def),innerType:this,catchValue:"function"==typeof def?def:()=>def,typeName:ZodFirstPartyTypeKind1.ZodCatch})}describe(description){let This=this.constructor;return new This({...this._def,description})}pipe(target){return ZodPipeline.create(this,target)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}let cuidRegex=/^c[^\s-]{8,}$/i,cuid2Regex=/^[a-z][a-z0-9]*$/,ulidRegex=/[0-9A-HJKMNP-TV-Z]{26}/,uuidRegex=/^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i,emailRegex=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\])|(\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\.[A-Za-z]{2,})+))$/,emojiRegex=/^(\p{Extended_Pictographic}|\p{Emoji_Component})+$/u,ipv4Regex=/^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,ipv6Regex=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,datetimeRegex=args=>args.precision?args.offset?RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${args.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`):RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${args.precision}}Z$`):0===args.precision?args.offset?RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$"):RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$"):args.offset?RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"):RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");class ZodString extends ZodType{constructor(){super(...arguments),this._regex=(regex,validation,message)=>this.refinement(data=>regex.test(data),{validation,code:ZodIssueCode.invalid_string,...errorUtil1.errToObj(message)}),this.nonempty=message=>this.min(1,errorUtil1.errToObj(message)),this.trim=()=>new ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]}),this.toLowerCase=()=>new ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]}),this.toUpperCase=()=>new ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}_parse(input){let ctx;this._def.coerce&&(input.data=String(input.data));let parsedType=this._getType(input);if(parsedType!==ZodParsedType.string){let ctx1=this._getOrReturnCtx(input);return addIssueToContext(ctx1,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.string,received:ctx1.parsedType}),INVALID}let status=new ParseStatus;for(let check of this._def.checks)if("min"===check.kind)input.data.length<check.value&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if("max"===check.kind)input.data.length>check.value&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!1,message:check.message}),status.dirty());else if("length"===check.kind){let tooBig=input.data.length>check.value,tooSmall=input.data.length<check.value;(tooBig||tooSmall)&&(ctx=this._getOrReturnCtx(input,ctx),tooBig?addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}):tooSmall&&addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:check.value,type:"string",inclusive:!0,exact:!0,message:check.message}),status.dirty())}else if("email"===check.kind)emailRegex.test(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"email",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("emoji"===check.kind)emojiRegex.test(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"emoji",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("uuid"===check.kind)uuidRegex.test(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"uuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("cuid"===check.kind)cuidRegex.test(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"cuid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("cuid2"===check.kind)cuid2Regex.test(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"cuid2",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("ulid"===check.kind)ulidRegex.test(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"ulid",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty());else if("url"===check.kind)try{new URL(input.data)}catch(_a){addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"url",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty()}else if("regex"===check.kind){check.regex.lastIndex=0;let testResult=check.regex.test(input.data);testResult||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"regex",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty())}else if("trim"===check.kind)input.data=input.data.trim();else if("includes"===check.kind)input.data.includes(check.value,check.position)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.invalid_string,validation:{includes:check.value,position:check.position},message:check.message}),status.dirty());else if("toLowerCase"===check.kind)input.data=input.data.toLowerCase();else if("toUpperCase"===check.kind)input.data=input.data.toUpperCase();else if("startsWith"===check.kind)input.data.startsWith(check.value)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.invalid_string,validation:{startsWith:check.value},message:check.message}),status.dirty());else if("endsWith"===check.kind)input.data.endsWith(check.value)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.invalid_string,validation:{endsWith:check.value},message:check.message}),status.dirty());else if("datetime"===check.kind){let regex=datetimeRegex(check);regex.test(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.invalid_string,validation:"datetime",message:check.message}),status.dirty())}else if("ip"===check.kind){var ip,version;ip=input.data,("v4"===(version=check.version)||!version)&&ipv4Regex.test(ip)||("v6"===version||!version)&&ipv6Regex.test(ip)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{validation:"ip",code:ZodIssueCode.invalid_string,message:check.message}),status.dirty())}else util1.assertNever(check);return{status:status.value,value:input.data}}_addCheck(check){return new ZodString({...this._def,checks:[...this._def.checks,check]})}email(message){return this._addCheck({kind:"email",...errorUtil1.errToObj(message)})}url(message){return this._addCheck({kind:"url",...errorUtil1.errToObj(message)})}emoji(message){return this._addCheck({kind:"emoji",...errorUtil1.errToObj(message)})}uuid(message){return this._addCheck({kind:"uuid",...errorUtil1.errToObj(message)})}cuid(message){return this._addCheck({kind:"cuid",...errorUtil1.errToObj(message)})}cuid2(message){return this._addCheck({kind:"cuid2",...errorUtil1.errToObj(message)})}ulid(message){return this._addCheck({kind:"ulid",...errorUtil1.errToObj(message)})}ip(options){return this._addCheck({kind:"ip",...errorUtil1.errToObj(options)})}datetime(options){var _a;return"string"==typeof options?this._addCheck({kind:"datetime",precision:null,offset:!1,message:options}):this._addCheck({kind:"datetime",precision:void 0===(null==options?void 0:options.precision)?null:null==options?void 0:options.precision,offset:null!==(_a=null==options?void 0:options.offset)&&void 0!==_a&&_a,...errorUtil1.errToObj(null==options?void 0:options.message)})}regex(regex,message){return this._addCheck({kind:"regex",regex:regex,...errorUtil1.errToObj(message)})}includes(value,options){return this._addCheck({kind:"includes",value:value,position:null==options?void 0:options.position,...errorUtil1.errToObj(null==options?void 0:options.message)})}startsWith(value,message){return this._addCheck({kind:"startsWith",value:value,...errorUtil1.errToObj(message)})}endsWith(value,message){return this._addCheck({kind:"endsWith",value:value,...errorUtil1.errToObj(message)})}min(minLength,message){return this._addCheck({kind:"min",value:minLength,...errorUtil1.errToObj(message)})}max(maxLength,message){return this._addCheck({kind:"max",value:maxLength,...errorUtil1.errToObj(message)})}length(len,message){return this._addCheck({kind:"length",value:len,...errorUtil1.errToObj(message)})}get isDatetime(){return!!this._def.checks.find(ch=>"datetime"===ch.kind)}get isEmail(){return!!this._def.checks.find(ch=>"email"===ch.kind)}get isURL(){return!!this._def.checks.find(ch=>"url"===ch.kind)}get isEmoji(){return!!this._def.checks.find(ch=>"emoji"===ch.kind)}get isUUID(){return!!this._def.checks.find(ch=>"uuid"===ch.kind)}get isCUID(){return!!this._def.checks.find(ch=>"cuid"===ch.kind)}get isCUID2(){return!!this._def.checks.find(ch=>"cuid2"===ch.kind)}get isULID(){return!!this._def.checks.find(ch=>"ulid"===ch.kind)}get isIP(){return!!this._def.checks.find(ch=>"ip"===ch.kind)}get minLength(){let min=null;for(let ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxLength(){let max=null;for(let ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}}ZodString.create=params=>{var _a;return new ZodString({checks:[],typeName:ZodFirstPartyTypeKind1.ZodString,coerce:null!==(_a=null==params?void 0:params.coerce)&&void 0!==_a&&_a,...processCreateParams(params)})};class ZodNumber extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(input){let ctx;this._def.coerce&&(input.data=Number(input.data));let parsedType=this._getType(input);if(parsedType!==ZodParsedType.number){let ctx1=this._getOrReturnCtx(input);return addIssueToContext(ctx1,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.number,received:ctx1.parsedType}),INVALID}let status=new ParseStatus;for(let check of this._def.checks)if("int"===check.kind)util1.isInteger(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.invalid_type,expected:"integer",received:"float",message:check.message}),status.dirty());else if("min"===check.kind){let tooSmall=check.inclusive?input.data<check.value:input.data<=check.value;tooSmall&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.too_small,minimum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty())}else if("max"===check.kind){let tooBig=check.inclusive?input.data>check.value:input.data>=check.value;tooBig&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.too_big,maximum:check.value,type:"number",inclusive:check.inclusive,exact:!1,message:check.message}),status.dirty())}else"multipleOf"===check.kind?0!==function(val,step){let valDecCount=(val.toString().split(".")[1]||"").length,stepDecCount=(step.toString().split(".")[1]||"").length,decCount=valDecCount>stepDecCount?valDecCount:stepDecCount,valInt=parseInt(val.toFixed(decCount).replace(".","")),stepInt=parseInt(step.toFixed(decCount).replace(".",""));return valInt%stepInt/Math.pow(10,decCount)}(input.data,check.value)&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):"finite"===check.kind?Number.isFinite(input.data)||(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.not_finite,message:check.message}),status.dirty()):util1.assertNever(check);return{status:status.value,value:input.data}}gte(value,message){return this.setLimit("min",value,!0,errorUtil1.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil1.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil1.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil1.toString(message))}setLimit(kind,value,inclusive,message){return new ZodNumber({...this._def,checks:[...this._def.checks,{kind,value,inclusive,message:errorUtil1.toString(message)}]})}_addCheck(check){return new ZodNumber({...this._def,checks:[...this._def.checks,check]})}int(message){return this._addCheck({kind:"int",message:errorUtil1.toString(message)})}positive(message){return this._addCheck({kind:"min",value:0,inclusive:!1,message:errorUtil1.toString(message)})}negative(message){return this._addCheck({kind:"max",value:0,inclusive:!1,message:errorUtil1.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:0,inclusive:!0,message:errorUtil1.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:0,inclusive:!0,message:errorUtil1.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value:value,message:errorUtil1.toString(message)})}finite(message){return this._addCheck({kind:"finite",message:errorUtil1.toString(message)})}safe(message){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:errorUtil1.toString(message)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:errorUtil1.toString(message)})}get minValue(){let min=null;for(let ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(let ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}get isInt(){return!!this._def.checks.find(ch=>"int"===ch.kind||"multipleOf"===ch.kind&&util1.isInteger(ch.value))}get isFinite(){let max=null,min=null;for(let ch of this._def.checks){if("finite"===ch.kind||"int"===ch.kind||"multipleOf"===ch.kind)return!0;"min"===ch.kind?(null===min||ch.value>min)&&(min=ch.value):"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value)}return Number.isFinite(min)&&Number.isFinite(max)}}ZodNumber.create=params=>new ZodNumber({checks:[],typeName:ZodFirstPartyTypeKind1.ZodNumber,coerce:(null==params?void 0:params.coerce)||!1,...processCreateParams(params)});class ZodBigInt extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(input){let ctx;this._def.coerce&&(input.data=BigInt(input.data));let parsedType=this._getType(input);if(parsedType!==ZodParsedType.bigint){let ctx1=this._getOrReturnCtx(input);return addIssueToContext(ctx1,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.bigint,received:ctx1.parsedType}),INVALID}let status=new ParseStatus;for(let check of this._def.checks)if("min"===check.kind){let tooSmall=check.inclusive?input.data<check.value:input.data<=check.value;tooSmall&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.too_small,type:"bigint",minimum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty())}else if("max"===check.kind){let tooBig=check.inclusive?input.data>check.value:input.data>=check.value;tooBig&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.too_big,type:"bigint",maximum:check.value,inclusive:check.inclusive,message:check.message}),status.dirty())}else"multipleOf"===check.kind?input.data%check.value!==BigInt(0)&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.not_multiple_of,multipleOf:check.value,message:check.message}),status.dirty()):util1.assertNever(check);return{status:status.value,value:input.data}}gte(value,message){return this.setLimit("min",value,!0,errorUtil1.toString(message))}gt(value,message){return this.setLimit("min",value,!1,errorUtil1.toString(message))}lte(value,message){return this.setLimit("max",value,!0,errorUtil1.toString(message))}lt(value,message){return this.setLimit("max",value,!1,errorUtil1.toString(message))}setLimit(kind,value,inclusive,message){return new ZodBigInt({...this._def,checks:[...this._def.checks,{kind,value,inclusive,message:errorUtil1.toString(message)}]})}_addCheck(check){return new ZodBigInt({...this._def,checks:[...this._def.checks,check]})}positive(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:errorUtil1.toString(message)})}negative(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:errorUtil1.toString(message)})}nonpositive(message){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:errorUtil1.toString(message)})}nonnegative(message){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:errorUtil1.toString(message)})}multipleOf(value,message){return this._addCheck({kind:"multipleOf",value,message:errorUtil1.toString(message)})}get minValue(){let min=null;for(let ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return min}get maxValue(){let max=null;for(let ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return max}}ZodBigInt.create=params=>{var _a;return new ZodBigInt({checks:[],typeName:ZodFirstPartyTypeKind1.ZodBigInt,coerce:null!==(_a=null==params?void 0:params.coerce)&&void 0!==_a&&_a,...processCreateParams(params)})};class ZodBoolean extends ZodType{_parse(input){this._def.coerce&&(input.data=Boolean(input.data));let parsedType=this._getType(input);if(parsedType!==ZodParsedType.boolean){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.boolean,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodBoolean.create=params=>new ZodBoolean({typeName:ZodFirstPartyTypeKind1.ZodBoolean,coerce:(null==params?void 0:params.coerce)||!1,...processCreateParams(params)});class ZodDate extends ZodType{_parse(input){let ctx;this._def.coerce&&(input.data=new Date(input.data));let parsedType=this._getType(input);if(parsedType!==ZodParsedType.date){let ctx1=this._getOrReturnCtx(input);return addIssueToContext(ctx1,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.date,received:ctx1.parsedType}),INVALID}if(isNaN(input.data.getTime())){let ctx2=this._getOrReturnCtx(input);return addIssueToContext(ctx2,{code:ZodIssueCode.invalid_date}),INVALID}let status=new ParseStatus;for(let check of this._def.checks)"min"===check.kind?input.data.getTime()<check.value&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.too_small,message:check.message,inclusive:!0,exact:!1,minimum:check.value,type:"date"}),status.dirty()):"max"===check.kind?input.data.getTime()>check.value&&(addIssueToContext(ctx=this._getOrReturnCtx(input,ctx),{code:ZodIssueCode.too_big,message:check.message,inclusive:!0,exact:!1,maximum:check.value,type:"date"}),status.dirty()):util1.assertNever(check);return{status:status.value,value:new Date(input.data.getTime())}}_addCheck(check){return new ZodDate({...this._def,checks:[...this._def.checks,check]})}min(minDate,message){return this._addCheck({kind:"min",value:minDate.getTime(),message:errorUtil1.toString(message)})}max(maxDate,message){return this._addCheck({kind:"max",value:maxDate.getTime(),message:errorUtil1.toString(message)})}get minDate(){let min=null;for(let ch of this._def.checks)"min"===ch.kind&&(null===min||ch.value>min)&&(min=ch.value);return null!=min?new Date(min):null}get maxDate(){let max=null;for(let ch of this._def.checks)"max"===ch.kind&&(null===max||ch.value<max)&&(max=ch.value);return null!=max?new Date(max):null}}ZodDate.create=params=>new ZodDate({checks:[],coerce:(null==params?void 0:params.coerce)||!1,typeName:ZodFirstPartyTypeKind1.ZodDate,...processCreateParams(params)});class ZodSymbol extends ZodType{_parse(input){let parsedType=this._getType(input);if(parsedType!==ZodParsedType.symbol){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.symbol,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodSymbol.create=params=>new ZodSymbol({typeName:ZodFirstPartyTypeKind1.ZodSymbol,...processCreateParams(params)});class ZodUndefined extends ZodType{_parse(input){let parsedType=this._getType(input);if(parsedType!==ZodParsedType.undefined){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.undefined,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodUndefined.create=params=>new ZodUndefined({typeName:ZodFirstPartyTypeKind1.ZodUndefined,...processCreateParams(params)});class ZodNull extends ZodType{_parse(input){let parsedType=this._getType(input);if(parsedType!==ZodParsedType.null){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.null,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodNull.create=params=>new ZodNull({typeName:ZodFirstPartyTypeKind1.ZodNull,...processCreateParams(params)});class ZodAny extends ZodType{constructor(){super(...arguments),this._any=!0}_parse(input){return OK(input.data)}}ZodAny.create=params=>new ZodAny({typeName:ZodFirstPartyTypeKind1.ZodAny,...processCreateParams(params)});class ZodUnknown extends ZodType{constructor(){super(...arguments),this._unknown=!0}_parse(input){return OK(input.data)}}ZodUnknown.create=params=>new ZodUnknown({typeName:ZodFirstPartyTypeKind1.ZodUnknown,...processCreateParams(params)});class ZodNever extends ZodType{_parse(input){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.never,received:ctx.parsedType}),INVALID}}ZodNever.create=params=>new ZodNever({typeName:ZodFirstPartyTypeKind1.ZodNever,...processCreateParams(params)});class ZodVoid extends ZodType{_parse(input){let parsedType=this._getType(input);if(parsedType!==ZodParsedType.undefined){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.void,received:ctx.parsedType}),INVALID}return OK(input.data)}}ZodVoid.create=params=>new ZodVoid({typeName:ZodFirstPartyTypeKind1.ZodVoid,...processCreateParams(params)});class ZodArray extends ZodType{_parse(input){let{ctx,status}=this._processInputParams(input),def=this._def;if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(null!==def.exactLength){let tooBig=ctx.data.length>def.exactLength.value,tooSmall=ctx.data.length<def.exactLength.value;(tooBig||tooSmall)&&(addIssueToContext(ctx,{code:tooBig?ZodIssueCode.too_big:ZodIssueCode.too_small,minimum:tooSmall?def.exactLength.value:void 0,maximum:tooBig?def.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:def.exactLength.message}),status.dirty())}if(null!==def.minLength&&ctx.data.length<def.minLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minLength.value,type:"array",inclusive:!0,exact:!1,message:def.minLength.message}),status.dirty()),null!==def.maxLength&&ctx.data.length>def.maxLength.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxLength.value,type:"array",inclusive:!0,exact:!1,message:def.maxLength.message}),status.dirty()),ctx.common.async)return Promise.all([...ctx.data].map((item,i)=>def.type._parseAsync(new ParseInputLazyPath(ctx,item,ctx.path,i)))).then(result=>ParseStatus.mergeArray(status,result));let result=[...ctx.data].map((item,i)=>def.type._parseSync(new ParseInputLazyPath(ctx,item,ctx.path,i)));return ParseStatus.mergeArray(status,result)}get element(){return this._def.type}min(minLength,message){return new ZodArray({...this._def,minLength:{value:minLength,message:errorUtil1.toString(message)}})}max(maxLength,message){return new ZodArray({...this._def,maxLength:{value:maxLength,message:errorUtil1.toString(message)}})}length(len,message){return new ZodArray({...this._def,exactLength:{value:len,message:errorUtil1.toString(message)}})}nonempty(message){return this.min(1,message)}}ZodArray.create=(schema,params)=>new ZodArray({type:schema,minLength:null,maxLength:null,exactLength:null,typeName:ZodFirstPartyTypeKind1.ZodArray,...processCreateParams(params)});class ZodObject extends ZodType{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;let shape=this._def.shape(),keys=util1.objectKeys(shape);return this._cached={shape,keys}}_parse(input){let parsedType=this._getType(input);if(parsedType!==ZodParsedType.object){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID}let{status,ctx:ctx1}=this._processInputParams(input),{shape,keys:shapeKeys}=this._getCached(),extraKeys=[];if(!(this._def.catchall instanceof ZodNever&&"strip"===this._def.unknownKeys))for(let key in ctx1.data)shapeKeys.includes(key)||extraKeys.push(key);let pairs=[];for(let key1 of shapeKeys){let keyValidator=shape[key1],value=ctx1.data[key1];pairs.push({key:{status:"valid",value:key1},value:keyValidator._parse(new ParseInputLazyPath(ctx1,value,ctx1.path,key1)),alwaysSet:key1 in ctx1.data})}if(this._def.catchall instanceof ZodNever){let unknownKeys=this._def.unknownKeys;if("passthrough"===unknownKeys)for(let key2 of extraKeys)pairs.push({key:{status:"valid",value:key2},value:{status:"valid",value:ctx1.data[key2]}});else if("strict"===unknownKeys)extraKeys.length>0&&(addIssueToContext(ctx1,{code:ZodIssueCode.unrecognized_keys,keys:extraKeys}),status.dirty());else if("strip"===unknownKeys);else throw Error("Internal ZodObject error: invalid unknownKeys value.")}else{let catchall=this._def.catchall;for(let key3 of extraKeys){let value1=ctx1.data[key3];pairs.push({key:{status:"valid",value:key3},value:catchall._parse(new ParseInputLazyPath(ctx1,value1,ctx1.path,key3)),alwaysSet:key3 in ctx1.data})}}return ctx1.common.async?Promise.resolve().then(async()=>{let syncPairs=[];for(let pair of pairs){let key=await pair.key;syncPairs.push({key,value:await pair.value,alwaysSet:pair.alwaysSet})}return syncPairs}).then(syncPairs=>ParseStatus.mergeObjectSync(status,syncPairs)):ParseStatus.mergeObjectSync(status,pairs)}get shape(){return this._def.shape()}strict(message){return errorUtil1.errToObj,new ZodObject({...this._def,unknownKeys:"strict",...void 0!==message?{errorMap:(issue,ctx)=>{var _a,_b,_c,_d;let defaultError=null!==(_c=null===(_b=(_a=this._def).errorMap)||void 0===_b?void 0:_b.call(_a,issue,ctx).message)&&void 0!==_c?_c:ctx.defaultError;return"unrecognized_keys"===issue.code?{message:null!==(_d=errorUtil1.errToObj(message).message)&&void 0!==_d?_d:defaultError}:{message:defaultError}}}:{}})}strip(){return new ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new ZodObject({...this._def,unknownKeys:"passthrough"})}extend(augmentation){return new ZodObject({...this._def,shape:()=>({...this._def.shape(),...augmentation})})}merge(merging){let merged=new ZodObject({unknownKeys:merging._def.unknownKeys,catchall:merging._def.catchall,shape:()=>({...this._def.shape(),...merging._def.shape()}),typeName:ZodFirstPartyTypeKind1.ZodObject});return merged}setKey(key,schema){return this.augment({[key]:schema})}catchall(index){return new ZodObject({...this._def,catchall:index})}pick(mask){let shape={};return util1.objectKeys(mask).forEach(key=>{mask[key]&&this.shape[key]&&(shape[key]=this.shape[key])}),new ZodObject({...this._def,shape:()=>shape})}omit(mask){let shape={};return util1.objectKeys(this.shape).forEach(key=>{mask[key]||(shape[key]=this.shape[key])}),new ZodObject({...this._def,shape:()=>shape})}deepPartial(){return function deepPartialify(schema){if(schema instanceof ZodObject){let newShape={};for(let key in schema.shape){let fieldSchema=schema.shape[key];newShape[key]=ZodOptional.create(deepPartialify(fieldSchema))}return new ZodObject({...schema._def,shape:()=>newShape})}return schema instanceof ZodArray?new ZodArray({...schema._def,type:deepPartialify(schema.element)}):schema instanceof ZodOptional?ZodOptional.create(deepPartialify(schema.unwrap())):schema instanceof ZodNullable?ZodNullable.create(deepPartialify(schema.unwrap())):schema instanceof ZodTuple?ZodTuple.create(schema.items.map(item=>deepPartialify(item))):schema}(this)}partial(mask){let newShape={};return util1.objectKeys(this.shape).forEach(key=>{let fieldSchema=this.shape[key];mask&&!mask[key]?newShape[key]=fieldSchema:newShape[key]=fieldSchema.optional()}),new ZodObject({...this._def,shape:()=>newShape})}required(mask){let newShape={};return util1.objectKeys(this.shape).forEach(key=>{if(mask&&!mask[key])newShape[key]=this.shape[key];else{let fieldSchema=this.shape[key],newField=fieldSchema;for(;newField instanceof ZodOptional;)newField=newField._def.innerType;newShape[key]=newField}}),new ZodObject({...this._def,shape:()=>newShape})}keyof(){return createZodEnum(util1.objectKeys(this.shape))}}ZodObject.create=(shape,params)=>new ZodObject({shape:()=>shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind1.ZodObject,...processCreateParams(params)}),ZodObject.strictCreate=(shape,params)=>new ZodObject({shape:()=>shape,unknownKeys:"strict",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind1.ZodObject,...processCreateParams(params)}),ZodObject.lazycreate=(shape,params)=>new ZodObject({shape,unknownKeys:"strip",catchall:ZodNever.create(),typeName:ZodFirstPartyTypeKind1.ZodObject,...processCreateParams(params)});class ZodUnion extends ZodType{_parse(input){let{ctx}=this._processInputParams(input),options=this._def.options;if(ctx.common.async)return Promise.all(options.map(async option=>{let childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null};return{result:await option._parseAsync({data:ctx.data,path:ctx.path,parent:childCtx}),ctx:childCtx}})).then(function(results){for(let result of results)if("valid"===result.result.status)return result.result;for(let result1 of results)if("dirty"===result1.result.status)return ctx.common.issues.push(...result1.ctx.common.issues),result1.result;let unionErrors=results.map(result=>new ZodError(result.ctx.common.issues));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors}),INVALID});{let dirty;let issues=[];for(let option of options){let childCtx={...ctx,common:{...ctx.common,issues:[]},parent:null},result=option._parseSync({data:ctx.data,path:ctx.path,parent:childCtx});if("valid"===result.status)return result;"dirty"!==result.status||dirty||(dirty={result,ctx:childCtx}),childCtx.common.issues.length&&issues.push(childCtx.common.issues)}if(dirty)return ctx.common.issues.push(...dirty.ctx.common.issues),dirty.result;let unionErrors=issues.map(issues=>new ZodError(issues));return addIssueToContext(ctx,{code:ZodIssueCode.invalid_union,unionErrors}),INVALID}}get options(){return this._def.options}}ZodUnion.create=(types,params)=>new ZodUnion({options:types,typeName:ZodFirstPartyTypeKind1.ZodUnion,...processCreateParams(params)});let getDiscriminator=type=>{if(type instanceof ZodLazy)return getDiscriminator(type.schema);if(type instanceof ZodEffects)return getDiscriminator(type.innerType());if(type instanceof ZodLiteral)return[type.value];if(type instanceof ZodEnum)return type.options;if(type instanceof ZodNativeEnum)return Object.keys(type.enum);if(type instanceof ZodDefault)return getDiscriminator(type._def.innerType);if(type instanceof ZodUndefined)return[void 0];else if(type instanceof ZodNull)return[null];else return null};class ZodDiscriminatedUnion extends ZodType{_parse(input){let{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;let discriminator=this.discriminator,discriminatorValue=ctx.data[discriminator],option=this.optionsMap.get(discriminatorValue);return option?ctx.common.async?option._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}):option._parseSync({data:ctx.data,path:ctx.path,parent:ctx}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[discriminator]}),INVALID)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(discriminator,options,params){let optionsMap=new Map;for(let type of options){let discriminatorValues=getDiscriminator(type.shape[discriminator]);if(!discriminatorValues)throw Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);for(let value of discriminatorValues){if(optionsMap.has(value))throw Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);optionsMap.set(value,type)}}return new ZodDiscriminatedUnion({typeName:ZodFirstPartyTypeKind1.ZodDiscriminatedUnion,discriminator,options,optionsMap,...processCreateParams(params)})}}class ZodIntersection extends ZodType{_parse(input){let{status,ctx}=this._processInputParams(input),handleParsed=(parsedLeft,parsedRight)=>{if(isAborted(parsedLeft)||isAborted(parsedRight))return INVALID;let merged=function mergeValues(a,b){let aType=getParsedType(a),bType=getParsedType(b);if(a===b)return{valid:!0,data:a};if(aType===ZodParsedType.object&&bType===ZodParsedType.object){let bKeys=util1.objectKeys(b),sharedKeys=util1.objectKeys(a).filter(key=>-1!==bKeys.indexOf(key)),newObj={...a,...b};for(let key of sharedKeys){let sharedValue=mergeValues(a[key],b[key]);if(!sharedValue.valid)return{valid:!1};newObj[key]=sharedValue.data}return{valid:!0,data:newObj}}if(aType===ZodParsedType.array&&bType===ZodParsedType.array){if(a.length!==b.length)return{valid:!1};let newArray=[];for(let index=0;index<a.length;index++){let itemA=a[index],itemB=b[index],sharedValue1=mergeValues(itemA,itemB);if(!sharedValue1.valid)return{valid:!1};newArray.push(sharedValue1.data)}return{valid:!0,data:newArray}}return aType===ZodParsedType.date&&bType===ZodParsedType.date&&+a==+b?{valid:!0,data:a}:{valid:!1}}(parsedLeft.value,parsedRight.value);return merged.valid?((isDirty(parsedLeft)||isDirty(parsedRight))&&status.dirty(),{status:status.value,value:merged.data}):(addIssueToContext(ctx,{code:ZodIssueCode.invalid_intersection_types}),INVALID)};return ctx.common.async?Promise.all([this._def.left._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseAsync({data:ctx.data,path:ctx.path,parent:ctx})]).then(([left,right])=>handleParsed(left,right)):handleParsed(this._def.left._parseSync({data:ctx.data,path:ctx.path,parent:ctx}),this._def.right._parseSync({data:ctx.data,path:ctx.path,parent:ctx}))}}ZodIntersection.create=(left,right,params)=>new ZodIntersection({left:left,right:right,typeName:ZodFirstPartyTypeKind1.ZodIntersection,...processCreateParams(params)});class ZodTuple extends ZodType{_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.array)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.array,received:ctx.parsedType}),INVALID;if(ctx.data.length<this._def.items.length)return addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),INVALID;let rest=this._def.rest;!rest&&ctx.data.length>this._def.items.length&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),status.dirty());let items=[...ctx.data].map((item,itemIndex)=>{let schema=this._def.items[itemIndex]||this._def.rest;return schema?schema._parse(new ParseInputLazyPath(ctx,item,ctx.path,itemIndex)):null}).filter(x=>!!x);return ctx.common.async?Promise.all(items).then(results=>ParseStatus.mergeArray(status,results)):ParseStatus.mergeArray(status,items)}get items(){return this._def.items}rest(rest){return new ZodTuple({...this._def,rest})}}ZodTuple.create=(schemas,params)=>{if(!Array.isArray(schemas))throw Error("You must pass an array of schemas to z.tuple([ ... ])");return new ZodTuple({items:schemas,typeName:ZodFirstPartyTypeKind1.ZodTuple,rest:null,...processCreateParams(params)})};class ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.object)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.object,received:ctx.parsedType}),INVALID;let pairs=[],keyType=this._def.keyType,valueType=this._def.valueType;for(let key in ctx.data)pairs.push({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,key)),value:valueType._parse(new ParseInputLazyPath(ctx,ctx.data[key],ctx.path,key))});return ctx.common.async?ParseStatus.mergeObjectAsync(status,pairs):ParseStatus.mergeObjectSync(status,pairs)}get element(){return this._def.valueType}static create(first,second,third){return new ZodRecord(second instanceof ZodType?{keyType:first,valueType:second,typeName:ZodFirstPartyTypeKind1.ZodRecord,...processCreateParams(third)}:{keyType:ZodString.create(),valueType:first,typeName:ZodFirstPartyTypeKind1.ZodRecord,...processCreateParams(second)})}}class ZodMap extends ZodType{_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.map)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.map,received:ctx.parsedType}),INVALID;let keyType=this._def.keyType,valueType=this._def.valueType,pairs=[...ctx.data.entries()].map(([key,value],index)=>({key:keyType._parse(new ParseInputLazyPath(ctx,key,ctx.path,[index,"key"])),value:valueType._parse(new ParseInputLazyPath(ctx,value,ctx.path,[index,"value"]))}));if(ctx.common.async){let finalMap=new Map;return Promise.resolve().then(async()=>{for(let pair of pairs){let key=await pair.key,value=await pair.value;if("aborted"===key.status||"aborted"===value.status)return INVALID;("dirty"===key.status||"dirty"===value.status)&&status.dirty(),finalMap.set(key.value,value.value)}return{status:status.value,value:finalMap}})}{let finalMap1=new Map;for(let pair of pairs){let key=pair.key,value=pair.value;if("aborted"===key.status||"aborted"===value.status)return INVALID;("dirty"===key.status||"dirty"===value.status)&&status.dirty(),finalMap1.set(key.value,value.value)}return{status:status.value,value:finalMap1}}}}ZodMap.create=(keyType,valueType,params)=>new ZodMap({valueType,keyType,typeName:ZodFirstPartyTypeKind1.ZodMap,...processCreateParams(params)});class ZodSet extends ZodType{_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.set)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.set,received:ctx.parsedType}),INVALID;let def=this._def;null!==def.minSize&&ctx.data.size<def.minSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_small,minimum:def.minSize.value,type:"set",inclusive:!0,exact:!1,message:def.minSize.message}),status.dirty()),null!==def.maxSize&&ctx.data.size>def.maxSize.value&&(addIssueToContext(ctx,{code:ZodIssueCode.too_big,maximum:def.maxSize.value,type:"set",inclusive:!0,exact:!1,message:def.maxSize.message}),status.dirty());let valueType=this._def.valueType;function finalizeSet(elements){let parsedSet=new Set;for(let element of elements){if("aborted"===element.status)return INVALID;"dirty"===element.status&&status.dirty(),parsedSet.add(element.value)}return{status:status.value,value:parsedSet}}let elements=[...ctx.data.values()].map((item,i)=>valueType._parse(new ParseInputLazyPath(ctx,item,ctx.path,i)));return ctx.common.async?Promise.all(elements).then(elements=>finalizeSet(elements)):finalizeSet(elements)}min(minSize,message){return new ZodSet({...this._def,minSize:{value:minSize,message:errorUtil1.toString(message)}})}max(maxSize,message){return new ZodSet({...this._def,maxSize:{value:maxSize,message:errorUtil1.toString(message)}})}size(size,message){return this.min(size,message).max(size,message)}nonempty(message){return this.min(1,message)}}ZodSet.create=(valueType,params)=>new ZodSet({valueType,minSize:null,maxSize:null,typeName:ZodFirstPartyTypeKind1.ZodSet,...processCreateParams(params)});class ZodFunction extends ZodType{constructor(){super(...arguments),this.validate=this.implement}_parse(input){let{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.function)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.function,received:ctx.parsedType}),INVALID;function makeArgsIssue(args,error){return makeIssue({data:args,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,overrideErrorMap,errorMap].filter(x=>!!x),issueData:{code:ZodIssueCode.invalid_arguments,argumentsError:error}})}function makeReturnsIssue(returns,error){return makeIssue({data:returns,path:ctx.path,errorMaps:[ctx.common.contextualErrorMap,ctx.schemaErrorMap,overrideErrorMap,errorMap].filter(x=>!!x),issueData:{code:ZodIssueCode.invalid_return_type,returnTypeError:error}})}let params={errorMap:ctx.common.contextualErrorMap},fn=ctx.data;return this._def.returns instanceof ZodPromise?OK(async(...args)=>{let error=new ZodError([]),parsedArgs=await this._def.args.parseAsync(args,params).catch(e=>{throw error.addIssue(makeArgsIssue(args,e)),error}),result=await fn(...parsedArgs),parsedReturns=await this._def.returns._def.type.parseAsync(result,params).catch(e=>{throw error.addIssue(makeReturnsIssue(result,e)),error});return parsedReturns}):OK((...args)=>{let parsedArgs=this._def.args.safeParse(args,params);if(!parsedArgs.success)throw new ZodError([makeArgsIssue(args,parsedArgs.error)]);let result=fn(...parsedArgs.data),parsedReturns=this._def.returns.safeParse(result,params);if(!parsedReturns.success)throw new ZodError([makeReturnsIssue(result,parsedReturns.error)]);return parsedReturns.data})}parameters(){return this._def.args}returnType(){return this._def.returns}args(...items){return new ZodFunction({...this._def,args:ZodTuple.create(items).rest(ZodUnknown.create())})}returns(returnType){return new ZodFunction({...this._def,returns:returnType})}implement(func){let validatedFunc=this.parse(func);return validatedFunc}strictImplement(func){let validatedFunc=this.parse(func);return validatedFunc}static create(args,returns,params){return new ZodFunction({args:args||ZodTuple.create([]).rest(ZodUnknown.create()),returns:returns||ZodUnknown.create(),typeName:ZodFirstPartyTypeKind1.ZodFunction,...processCreateParams(params)})}}class ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(input){let{ctx}=this._processInputParams(input),lazySchema=this._def.getter();return lazySchema._parse({data:ctx.data,path:ctx.path,parent:ctx})}}ZodLazy.create=(getter,params)=>new ZodLazy({getter:getter,typeName:ZodFirstPartyTypeKind1.ZodLazy,...processCreateParams(params)});class ZodLiteral extends ZodType{_parse(input){if(input.data!==this._def.value){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_literal,expected:this._def.value}),INVALID}return{status:"valid",value:input.data}}get value(){return this._def.value}}function createZodEnum(values,params){return new ZodEnum({values:values,typeName:ZodFirstPartyTypeKind1.ZodEnum,...processCreateParams(params)})}ZodLiteral.create=(value,params)=>new ZodLiteral({value:value,typeName:ZodFirstPartyTypeKind1.ZodLiteral,...processCreateParams(params)});class ZodEnum extends ZodType{_parse(input){if("string"!=typeof input.data){let ctx=this._getOrReturnCtx(input),expectedValues=this._def.values;return addIssueToContext(ctx,{expected:util1.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(-1===this._def.values.indexOf(input.data)){let ctx1=this._getOrReturnCtx(input),expectedValues1=this._def.values;return addIssueToContext(ctx1,{received:ctx1.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues1}),INVALID}return OK(input.data)}get options(){return this._def.values}get enum(){let enumValues={};for(let val of this._def.values)enumValues[val]=val;return enumValues}get Values(){let enumValues={};for(let val of this._def.values)enumValues[val]=val;return enumValues}get Enum(){let enumValues={};for(let val of this._def.values)enumValues[val]=val;return enumValues}extract(values){return ZodEnum.create(values)}exclude(values){return ZodEnum.create(this.options.filter(opt=>!values.includes(opt)))}}ZodEnum.create=createZodEnum;class ZodNativeEnum extends ZodType{_parse(input){let nativeEnumValues=util1.getValidEnumValues(this._def.values),ctx=this._getOrReturnCtx(input);if(ctx.parsedType!==ZodParsedType.string&&ctx.parsedType!==ZodParsedType.number){let expectedValues=util1.objectValues(nativeEnumValues);return addIssueToContext(ctx,{expected:util1.joinValues(expectedValues),received:ctx.parsedType,code:ZodIssueCode.invalid_type}),INVALID}if(-1===nativeEnumValues.indexOf(input.data)){let expectedValues1=util1.objectValues(nativeEnumValues);return addIssueToContext(ctx,{received:ctx.data,code:ZodIssueCode.invalid_enum_value,options:expectedValues1}),INVALID}return OK(input.data)}get enum(){return this._def.values}}ZodNativeEnum.create=(values,params)=>new ZodNativeEnum({values:values,typeName:ZodFirstPartyTypeKind1.ZodNativeEnum,...processCreateParams(params)});class ZodPromise extends ZodType{unwrap(){return this._def.type}_parse(input){let{ctx}=this._processInputParams(input);if(ctx.parsedType!==ZodParsedType.promise&&!1===ctx.common.async)return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.promise,received:ctx.parsedType}),INVALID;let promisified=ctx.parsedType===ZodParsedType.promise?ctx.data:Promise.resolve(ctx.data);return OK(promisified.then(data=>this._def.type.parseAsync(data,{path:ctx.path,errorMap:ctx.common.contextualErrorMap})))}}ZodPromise.create=(schema,params)=>new ZodPromise({type:schema,typeName:ZodFirstPartyTypeKind1.ZodPromise,...processCreateParams(params)});class ZodEffects extends ZodType{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ZodFirstPartyTypeKind1.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(input){let{status,ctx}=this._processInputParams(input),effect=this._def.effect||null;if("preprocess"===effect.type){let processed=effect.transform(ctx.data);return ctx.common.async?Promise.resolve(processed).then(processed=>this._def.schema._parseAsync({data:processed,path:ctx.path,parent:ctx})):this._def.schema._parseSync({data:processed,path:ctx.path,parent:ctx})}let checkCtx={addIssue(arg){addIssueToContext(ctx,arg),arg.fatal?status.abort():status.dirty()},get path(){return ctx.path}};if(checkCtx.addIssue=checkCtx.addIssue.bind(checkCtx),"refinement"===effect.type){let executeRefinement=acc=>{let result=effect.refinement(acc,checkCtx);if(ctx.common.async)return Promise.resolve(result);if(result instanceof Promise)throw Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return acc};if(!1!==ctx.common.async)return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then(inner=>"aborted"===inner.status?INVALID:("dirty"===inner.status&&status.dirty(),executeRefinement(inner.value).then(()=>({status:status.value,value:inner.value}))));{let inner=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inner.status?INVALID:("dirty"===inner.status&&status.dirty(),executeRefinement(inner.value),{status:status.value,value:inner.value})}}if("transform"===effect.type){if(!1!==ctx.common.async)return this._def.schema._parseAsync({data:ctx.data,path:ctx.path,parent:ctx}).then(base=>isValid(base)?Promise.resolve(effect.transform(base.value,checkCtx)).then(result=>({status:status.value,value:result})):base);{let base=this._def.schema._parseSync({data:ctx.data,path:ctx.path,parent:ctx});if(!isValid(base))return base;let result=effect.transform(base.value,checkCtx);if(result instanceof Promise)throw Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:status.value,value:result}}}util1.assertNever(effect)}}ZodEffects.create=(schema,effect,params)=>new ZodEffects({schema,typeName:ZodFirstPartyTypeKind1.ZodEffects,effect,...processCreateParams(params)}),ZodEffects.createWithPreprocess=(preprocess,schema,params)=>new ZodEffects({schema,effect:{type:"preprocess",transform:preprocess},typeName:ZodFirstPartyTypeKind1.ZodEffects,...processCreateParams(params)});class ZodOptional extends ZodType{_parse(input){let parsedType=this._getType(input);return parsedType===ZodParsedType.undefined?OK(void 0):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}}ZodOptional.create=(type,params)=>new ZodOptional({innerType:type,typeName:ZodFirstPartyTypeKind1.ZodOptional,...processCreateParams(params)});class ZodNullable extends ZodType{_parse(input){let parsedType=this._getType(input);return parsedType===ZodParsedType.null?OK(null):this._def.innerType._parse(input)}unwrap(){return this._def.innerType}}ZodNullable.create=(type,params)=>new ZodNullable({innerType:type,typeName:ZodFirstPartyTypeKind1.ZodNullable,...processCreateParams(params)});class ZodDefault extends ZodType{_parse(input){let{ctx}=this._processInputParams(input),data=ctx.data;return ctx.parsedType===ZodParsedType.undefined&&(data=this._def.defaultValue()),this._def.innerType._parse({data,path:ctx.path,parent:ctx})}removeDefault(){return this._def.innerType}}ZodDefault.create=(type,params)=>new ZodDefault({innerType:type,typeName:ZodFirstPartyTypeKind1.ZodDefault,defaultValue:"function"==typeof params.default?params.default:()=>params.default,...processCreateParams(params)});class ZodCatch extends ZodType{_parse(input){let{ctx}=this._processInputParams(input),newCtx={...ctx,common:{...ctx.common,issues:[]}},result=this._def.innerType._parse({data:newCtx.data,path:newCtx.path,parent:{...newCtx}});return isAsync(result)?result.then(result=>({status:"valid",value:"valid"===result.status?result.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})})):{status:"valid",value:"valid"===result.status?result.value:this._def.catchValue({get error(){return new ZodError(newCtx.common.issues)},input:newCtx.data})}}removeCatch(){return this._def.innerType}}ZodCatch.create=(type,params)=>new ZodCatch({innerType:type,typeName:ZodFirstPartyTypeKind1.ZodCatch,catchValue:"function"==typeof params.catch?params.catch:()=>params.catch,...processCreateParams(params)});class ZodNaN extends ZodType{_parse(input){let parsedType=this._getType(input);if(parsedType!==ZodParsedType.nan){let ctx=this._getOrReturnCtx(input);return addIssueToContext(ctx,{code:ZodIssueCode.invalid_type,expected:ZodParsedType.nan,received:ctx.parsedType}),INVALID}return{status:"valid",value:input.data}}}ZodNaN.create=params=>new ZodNaN({typeName:ZodFirstPartyTypeKind1.ZodNaN,...processCreateParams(params)});let BRAND=Symbol("zod_brand");class ZodBranded extends ZodType{_parse(input){let{ctx}=this._processInputParams(input),data=ctx.data;return this._def.type._parse({data,path:ctx.path,parent:ctx})}unwrap(){return this._def.type}}class ZodPipeline extends ZodType{_parse(input){let{status,ctx}=this._processInputParams(input);if(ctx.common.async){let handleAsync=async()=>{let inResult=await this._def.in._parseAsync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inResult.status?INVALID:"dirty"===inResult.status?(status.dirty(),DIRTY(inResult.value)):this._def.out._parseAsync({data:inResult.value,path:ctx.path,parent:ctx})};return handleAsync()}{let inResult=this._def.in._parseSync({data:ctx.data,path:ctx.path,parent:ctx});return"aborted"===inResult.status?INVALID:"dirty"===inResult.status?(status.dirty(),{status:"dirty",value:inResult.value}):this._def.out._parseSync({data:inResult.value,path:ctx.path,parent:ctx})}}static create(a,b){return new ZodPipeline({in:a,out:b,typeName:ZodFirstPartyTypeKind1.ZodPipeline})}}let custom=(check,params={},fatal)=>check?ZodAny.create().superRefine((data,ctx)=>{var _a,_b;if(!check(data)){let p="function"==typeof params?params(data):"string"==typeof params?{message:params}:params,_fatal=null===(_b=null!==(_a=p.fatal)&&void 0!==_a?_a:fatal)||void 0===_b||_b;ctx.addIssue({code:"custom",..."string"==typeof p?{message:p}:p,fatal:_fatal})}}):ZodAny.create(),late={object:ZodObject.lazycreate};(ZodFirstPartyTypeKind=ZodFirstPartyTypeKind1||(ZodFirstPartyTypeKind1={})).ZodString="ZodString",ZodFirstPartyTypeKind.ZodNumber="ZodNumber",ZodFirstPartyTypeKind.ZodNaN="ZodNaN",ZodFirstPartyTypeKind.ZodBigInt="ZodBigInt",ZodFirstPartyTypeKind.ZodBoolean="ZodBoolean",ZodFirstPartyTypeKind.ZodDate="ZodDate",ZodFirstPartyTypeKind.ZodSymbol="ZodSymbol",ZodFirstPartyTypeKind.ZodUndefined="ZodUndefined",ZodFirstPartyTypeKind.ZodNull="ZodNull",ZodFirstPartyTypeKind.ZodAny="ZodAny",ZodFirstPartyTypeKind.ZodUnknown="ZodUnknown",ZodFirstPartyTypeKind.ZodNever="ZodNever",ZodFirstPartyTypeKind.ZodVoid="ZodVoid",ZodFirstPartyTypeKind.ZodArray="ZodArray",ZodFirstPartyTypeKind.ZodObject="ZodObject",ZodFirstPartyTypeKind.ZodUnion="ZodUnion",ZodFirstPartyTypeKind.ZodDiscriminatedUnion="ZodDiscriminatedUnion",ZodFirstPartyTypeKind.ZodIntersection="ZodIntersection",ZodFirstPartyTypeKind.ZodTuple="ZodTuple",ZodFirstPartyTypeKind.ZodRecord="ZodRecord",ZodFirstPartyTypeKind.ZodMap="ZodMap",ZodFirstPartyTypeKind.ZodSet="ZodSet",ZodFirstPartyTypeKind.ZodFunction="ZodFunction",ZodFirstPartyTypeKind.ZodLazy="ZodLazy",ZodFirstPartyTypeKind.ZodLiteral="ZodLiteral",ZodFirstPartyTypeKind.ZodEnum="ZodEnum",ZodFirstPartyTypeKind.ZodEffects="ZodEffects",ZodFirstPartyTypeKind.ZodNativeEnum="ZodNativeEnum",ZodFirstPartyTypeKind.ZodOptional="ZodOptional",ZodFirstPartyTypeKind.ZodNullable="ZodNullable",ZodFirstPartyTypeKind.ZodDefault="ZodDefault",ZodFirstPartyTypeKind.ZodCatch="ZodCatch",ZodFirstPartyTypeKind.ZodPromise="ZodPromise",ZodFirstPartyTypeKind.ZodBranded="ZodBranded",ZodFirstPartyTypeKind.ZodPipeline="ZodPipeline";let instanceOfType=(cls,params={message:`Input not instance of ${cls.name}`})=>custom(data=>data instanceof cls,params),stringType=ZodString.create,numberType=ZodNumber.create,nanType=ZodNaN.create,bigIntType=ZodBigInt.create,booleanType=ZodBoolean.create,dateType=ZodDate.create,symbolType=ZodSymbol.create,undefinedType=ZodUndefined.create,nullType=ZodNull.create,anyType=ZodAny.create,unknownType=ZodUnknown.create,neverType=ZodNever.create,voidType=ZodVoid.create,arrayType=ZodArray.create,objectType=ZodObject.create,strictObjectType=ZodObject.strictCreate,unionType=ZodUnion.create,discriminatedUnionType=ZodDiscriminatedUnion.create,intersectionType=ZodIntersection.create,tupleType=ZodTuple.create,recordType=ZodRecord.create,mapType=ZodMap.create,setType=ZodSet.create,functionType=ZodFunction.create,lazyType=ZodLazy.create,literalType=ZodLiteral.create,enumType=ZodEnum.create,nativeEnumType=ZodNativeEnum.create,promiseType=ZodPromise.create,effectsType=ZodEffects.create,optionalType=ZodOptional.create,nullableType=ZodNullable.create,preprocessType=ZodEffects.createWithPreprocess,pipelineType=ZodPipeline.create,ostring=()=>stringType().optional(),onumber=()=>numberType().optional(),oboolean=()=>booleanType().optional();var util,errorUtil,ZodFirstPartyTypeKind,util1,objectUtil,errorUtil1,ZodFirstPartyTypeKind1,z=Object.freeze({__proto__:null,defaultErrorMap:errorMap,setErrorMap:function(map){overrideErrorMap=map},getErrorMap:function(){return overrideErrorMap},makeIssue:makeIssue,EMPTY_PATH:[],addIssueToContext:addIssueToContext,ParseStatus:ParseStatus,INVALID:INVALID,DIRTY:DIRTY,OK:OK,isAborted:isAborted,isDirty:isDirty,isValid:isValid,isAsync:isAsync,get util(){return util1},get objectUtil(){return objectUtil},ZodParsedType:ZodParsedType,getParsedType:getParsedType,ZodType:ZodType,ZodString:ZodString,ZodNumber:ZodNumber,ZodBigInt:ZodBigInt,ZodBoolean:ZodBoolean,ZodDate:ZodDate,ZodSymbol:ZodSymbol,ZodUndefined:ZodUndefined,ZodNull:ZodNull,ZodAny:ZodAny,ZodUnknown:ZodUnknown,ZodNever:ZodNever,ZodVoid:ZodVoid,ZodArray:ZodArray,ZodObject:ZodObject,ZodUnion:ZodUnion,ZodDiscriminatedUnion:ZodDiscriminatedUnion,ZodIntersection:ZodIntersection,ZodTuple:ZodTuple,ZodRecord:ZodRecord,ZodMap:ZodMap,ZodSet:ZodSet,ZodFunction:ZodFunction,ZodLazy:ZodLazy,ZodLiteral:ZodLiteral,ZodEnum:ZodEnum,ZodNativeEnum:ZodNativeEnum,ZodPromise:ZodPromise,ZodEffects:ZodEffects,ZodTransformer:ZodEffects,ZodOptional:ZodOptional,ZodNullable:ZodNullable,ZodDefault:ZodDefault,ZodCatch:ZodCatch,ZodNaN:ZodNaN,BRAND:BRAND,ZodBranded:ZodBranded,ZodPipeline:ZodPipeline,custom:custom,Schema:ZodType,ZodSchema:ZodType,late:late,get ZodFirstPartyTypeKind(){return ZodFirstPartyTypeKind1},coerce:{string:arg=>ZodString.create({...arg,coerce:!0}),number:arg=>ZodNumber.create({...arg,coerce:!0}),boolean:arg=>ZodBoolean.create({...arg,coerce:!0}),bigint:arg=>ZodBigInt.create({...arg,coerce:!0}),date:arg=>ZodDate.create({...arg,coerce:!0})},any:anyType,array:arrayType,bigint:bigIntType,boolean:booleanType,date:dateType,discriminatedUnion:discriminatedUnionType,effect:effectsType,enum:enumType,function:functionType,instanceof:instanceOfType,intersection:intersectionType,lazy:lazyType,literal:literalType,map:mapType,nan:nanType,nativeEnum:nativeEnumType,never:neverType,null:nullType,nullable:nullableType,number:numberType,object:objectType,oboolean:oboolean,onumber:onumber,optional:optionalType,ostring:ostring,pipeline:pipelineType,preprocess:preprocessType,promise:promiseType,record:recordType,set:setType,strictObject:strictObjectType,string:stringType,symbol:symbolType,transformer:effectsType,tuple:tupleType,undefined:undefinedType,union:unionType,unknown:unknownType,void:voidType,NEVER:INVALID,ZodIssueCode:ZodIssueCode,quotelessJson:quotelessJson,ZodError:ZodError})}}]);